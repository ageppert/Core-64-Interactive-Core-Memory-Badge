
/*
PURPOSE:
// Character Map
// Characters could be 4*5 (w*h) to save space or full 8*8.
// A full alphabet table is 26 x 5 x 4 bits = 65 bytes (if stored maximum efficiently)
// Array arranged directly as " CORE MEMORY!" = 13 elements, numbered 0 to 12

SETUP:
- none
*/
 
#ifndef CHARACTER_MAP_H
#define CHARACTER_MAP_H

#if (ARDUINO >= 100)
#include <Arduino.h>
#else
#include <WProgram.h>
#endif

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

// Need to use program memory for constants because over 77% usage in UNO causes instability.
// https://forum.arduino.cc/index.php?topic=45681.0

const static bool character_font[14][5][4] PROGMEM = {   // Character, Row, Column
{
  {0,0,0,0}, // space
  {0,0,0,0},
  {0,0,0,0},
  {0,0,0,0},
  {0,0,0,0}
},
{
  {0,1,1,1}, // C
  {0,1,0,0},
  {0,1,0,0},
  {0,1,1,1},
  {0,0,0,0}
},
{
  {0,1,1,1}, // O
  {0,1,0,1},
  {0,1,0,1},
  {0,1,1,1},
  {0,0,0,0}
},
{
  {0,1,1,1}, // R
  {0,1,0,1},
  {0,1,1,0},
  {0,1,0,1},
  {0,0,0,0}
},
{
  {0,1,1,1}, // E
  {0,1,0,0},
  {0,1,1,0},
  {0,1,1,1},
  {0,0,0,0}
},
{
  {0,0,0,0}, //  
  {0,0,0,0},
  {0,0,0,0},
  {0,0,0,0},
  {0,0,0,0}
},
{
  {0,1,0,1}, // M
  {0,1,1,1},
  {0,1,0,1},
  {0,1,0,1},
  {0,0,0,0}
},
{
  {0,1,1,1}, // E
  {0,1,0,0},
  {0,1,1,0},
  {0,1,1,1},
  {0,0,0,0}
},
{
  {0,1,0,1}, // M
  {0,1,1,1},
  {0,1,0,1},
  {0,1,0,1},
  {0,0,0,0}
},
{
  {0,1,1,1}, // O
  {0,1,0,1},
  {0,1,0,1},
  {0,1,1,1},
  {0,0,0,0}
},
{
  {0,1,1,1}, // R
  {0,1,0,1},
  {0,1,1,0},
  {0,1,0,1},
  {0,0,0,0}
},
{
  {0,1,0,1}, // Y
  {0,1,0,1},
  {0,0,1,0},
  {0,0,1,0},
  {0,0,0,0}
},
{
  {0,1,0,0}, // !
  {0,1,0,0},
  {0,0,0,0},
  {0,1,0,0},
  {0,0,0,0}
}
};

const static uint8_t ColorFontSymbols[4][8][8] PROGMEM = {   // Character, Row, Column

{  {  0,  0,  1,  1,  1,  0,  0,  0},
   {  0, 35, 35, 35, 35,  0,  0,  0},
   { 35, 35,  0,  0,  0, 35, 35, 35},
   { 65, 65,  0,  0,  0, 65, 65,  0},
   { 96, 96,  0,  0,  0, 96, 96, 96},
   {  0,160,160,160,160,  0,  0,  0},
   {  0,  0,160,160,160,  0,  0,  0},
   {  0,  0,  0,  0,  0,  0,  0,  0}  },   // C=

{  {1,1,1,0,1,0,1,0},
   {1,0,0,0,1,0,1,0},
   {1,1,1,0,1,1,1,0},
   {1,0,1,0,0,0,1,0},
   {1,1,1,0,0,0,1,0},
   {0,0,0,0,0,0,0,0},
   {0,0,0,0,0,0,0,0},
   {0,0,0,0,0,0,0,0}  },   // 64

{  {0,1,0,0,0,0,1,0},
   {1,1,0,1,1,0,1,1},
   {0,0,1,1,1,1,0,0},
   {0,0,1,0,0,1,0,0},
   {0,0,1,1,1,1,0,0},
   {0,0,1,1,1,1,0,0},
   {1,1,0,1,1,0,1,1},
   {0,1,0,0,0,0,1,0}  },   // Hackaday logo

{  {1,1,1,0,1,1,1,0},
   {1,0,0,0,1,0,1,0},
   {1,1,1,0,1,1,1,0},
   {0,0,0,0,0,0,0,0},
   {1,1,1,0,1,1,1,0},
   {1,1,0,0,1,1,0,0},
   {1,0,1,0,1,1,1,0},      // C O
   {0,0,0,0,0,0,0,0}  }    // R E 
};

#ifdef __cplusplus
} // extern "C"
#endif

#endif
